<?xml version="1.0"?>

<bindings xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="avatar">

    <resources>
      <stylesheet src="chrome://global/skin"/>
      <stylesheet src="chrome://messenger/skin/avatar.css"/>
    </resources>

    <content>
      <xul:hbox flex="1" align="center">
        <xul:vbox style="background: white; padding: 1px; border: 1px solid #999"
            hidden="true">
          <html:div>
            <html:img id="image" width="1" height="1" style="display: block"/>
          </html:div>
        </xul:vbox>
      </xul:hbox>
    </content>

    <implementation>

      <property name="model">
        <getter><![CDATA[
          return this._model;
        ]]></getter>

        <setter><![CDATA[
          if (this._model == val)
            return val;

          if (this._model)
            this._model.unregisterView(this, "onAvatarChange", "avatar");

          if (val) {
            this._model = val;
            this._model.registerView(this, "onAvatarChange", "avatar");
          }
          this.onAvatarChange();

          return val;
        ]]></setter>
      </property>
      <constructor>
        <![CDATA[
          this._image = document.getAnonymousElementByAttribute(this, "id", "image");
          this._container = this._image.parentNode.parentNode.parentNode;
          if (this.model) {
            this._model = this.model;
            this._model.registerView(this, "onAvatarChange", "avatar");
          }
          this.onAvatarChange();
        ]]>
      </constructor>

      <destructor>
        <![CDATA[
          this.model = null;
        ]]>
      </destructor>

      <method name="onAvatarChange">
        <body><![CDATA[
          if (this.getAttribute("showBlankAvatar") != "true" && 
                (!this._model || !this._model.avatar)) {
              this._container.firstChild.hidden = true;
              this._src = null;
            } else {
              this._container.firstChild.hidden = false;
              if (this._model && this._model.avatar)
                this._src = "file://"+this._model.avatar;
              else
                this._src = "chrome://messenger/skin/default-avatar.png";
              this._image.setAttribute("src", this._src);
            }
        ]]></body>
      </method>
    </implementation>

    <handlers>
      <handler event="load"><![CDATA[
        if (this._src != this._image.src) {
          this._image.src = this._src;
          return;
        }

        this._image.width = this._image.height = 1;
        var height = this._container.boxObject.height - 4;

        if (height > this._image.naturalHeight)
          height = this._image.naturalHeight;

        this._image.width = height*this._image.naturalWidth/this._image.naturalHeight;
        this._image.height = height;
      ]]></handler>
    </handlers> 

  </binding>

</bindings>
