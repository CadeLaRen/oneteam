<?xml version="1.0"?>
<bindings 
  xmlns="http://www.mozilla.org/xbl"
  xmlns:xbl="http://www.mozilla.org/xbl"
  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml">
  
	
	
	
<binding id="yesnoprompt">

	
    <resources>
      <stylesheet src="chrome://messenger/skin/prompts.css"/>
    </resources>
			
	  <content class="prompt" orient="vertical">
		<xul:description id="message"> </xul:description>
		<xul:textbox id="textbox" collapsed="true" xbl:inherits="value"/>
		<xul:hbox>
			<xul:button label="Ok" id="yes"/>
			<xul:button label="Cancel" id="no"/>
			<!--
			<xul:label value="Ok" class="text-link" id="yes" />
			<xul:label value="Cancel" class="text-link" id="no"/>
				-->
		</xul:hbox>
	  </content>
	<implementation>		
		<constructor>
			<![CDATA[
				this.textbox = document.getAnonymousElementByAttribute(this, "id", "textbox");
				this.message = document.getAnonymousElementByAttribute(this, "id", "message");
				
				this.message.firstChild.textContent = this.getAttribute("message");			
				
			]]>
		</constructor>	
		<property name="onChoose">
		  <setter>
			<![CDATA[
			  this.handler = val; return val;
			]]> 
		  </setter>
		</property>	
	</implementation>

	<handlers>
		<handler event="click">
			if(event.originalTarget.id == "other"){
				this.message.collapsed = true;
				this.textbox.collapsed= false;
				this.other.collapsed = true;
			} else if(event.originalTarget.id){
				var response = (event.originalTarget.id == "yes");
				
				if(this.handler) {
						this.handler(response);
				}
			}
			
			event.preventBubble();
		</handler>
	</handlers>

	</binding>
	

	<binding id="renameprompt">

	
    <resources>
      <stylesheet src="chrome://messenger/skin/prompts.css"/>
    </resources>
			
	  <content orient="horizontal">
		<xul:vbox flex="1" class="prompt">
			<xul:description>Enter a new name:</xul:description>
			<xul:textbox flex="1"/>
			<xul:label class="text-link" value="Use full name"/>
			<xul:hbox>
				
				<xul:button label="Ok" id="yes"/>
				<xul:button label="Cancel" id="no"/>

			</xul:hbox>
		</xul:vbox>
	  </content>
	<implementation>		
		<constructor>
			<![CDATA[

				document.getAnonymousNodes(this)[0].firstChild.textContent = this.getAttribute("message");					
			]]>
		</constructor>	
		<property name="onChoose">
		  <setter>
			<![CDATA[
			  this.handler = val; return val;
			]]> 
		  </setter>
		</property>	
	</implementation>

	<handlers>
		<handler event="click">
			if(event.originalTarget.id){
				var response = (event.originalTarget.id == "yes");
				if(this.handler)
					this.handler(response);
			}
			
			event.preventBubble();
		</handler>
	</handlers>

	</binding>
	
	
	
	<binding id="checkboxelement">
	<implementation>		
		<constructor>
			<![CDATA[
				
				this.list = new Array();
				var nodes = this.childNodes;

				for(var i = 0 ; i < nodes.length; i++){
					this.addItem(
						nodes[i].getAttribute("value"),
						nodes[i].getAttribute("checked")
					)
				}
		
		
				new Animator(30).animate(this);				

			]]>
		</constructor>	
		<property name="onChoose">
		  <setter>
			<![CDATA[
			  this.handler = val; return val;
			]]> 
		  </setter>
		</property>	
		<method name="addItem">
			<parameter name="item"/>
			<parameter name="checked"/>
			<body><![CDATA[
				const XULNS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
				var c = document.createElementNS(XULNS,"checkbox");
				c.setAttribute("label", item);
				c.setAttribute("checked", checked);
				var box = document.getAnonymousElementByAttribute(this, "id", "checkboxholder");
				
				var b = document.createElementNS(XULNS, "hbox");
				b.appendChild(c);
				box.appendChild(b);
				this.list.push(c);
			]]></body>		
		</method>
	</implementation>

	<handlers>
		<handler event="click"><![CDATA[
			switch(event.originalTarget.id){
				case "yes":
					if(this.handler)
						this.handler(this.list);
					break;
				case "no":
					if(this.handler)
						this.handler(null);
					break;
				case "create":
					var item = prompt("Enter a new of the new group:");
					if(item)
						this.addItem(item);
					break;
			}
			
			event.preventBubble();
		]]></handler>
	</handlers>

	</binding>
	
	
	<binding id="checkboxprompt" extends="prompts.xml#checkboxelement">
		
    <resources>
      <stylesheet src="chrome://messenger/skin/prompts.css"/>
    </resources>
		
	  <content>
		<xul:vbox flex="1" class="prompt">
			<xul:label value="Change group:"/>
			<xul:vbox id="checkboxholder">
				
			</xul:vbox>
			<xul:label class="text-link" value="Create group" id="create"/>
			<xul:hbox>
				<xul:button label="Ok" id="yes" />
				<xul:button label="Cancel" id="no"/>
			</xul:hbox>
			<children/>
		</xul:vbox>
	  </content>


	</binding>
	
	<binding id="checkboxpopup" extends="prompts.xml#checkboxelement">
		
    <resources>
      <stylesheet src="chrome://messenger/skin/popups.css"/>
    </resources>
		
	  <content class="popup" flex="1" orient="horizontal" label="Accept">
			<xul:vbox style="margin-left: 10px;">
				<xul:vbox id="checkboxholder">
				</xul:vbox>
				<xul:label flex="1"  class="text-link" xbl:inherits="hidden=noprompt value=label" id="yes"/>
			</xul:vbox>
			<xul:spacer flex="1"/>
			
			<xul:vbox>
				<xul:image class="closebutton" id="no"/>
			</xul:vbox>
		  <children/>
	  </content>
	</binding>
</bindings>	