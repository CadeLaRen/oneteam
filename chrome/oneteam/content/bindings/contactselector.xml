<?xml version="1.0"?>

<bindings xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="contactselector">

    <resources>
      <stylesheet src="chrome://global/skin"/>
    </resources>

    <content>
      <xul:vbox flex="1">
        <xul:hbox flex="1">
          <xul:textbox id="name-textbox" flex="1" xbl:inherits="disabled"/>
          <xul:button id="add-button" label="Add" xbl:inherits="disabled"/>
        </xul:hbox>
        <xul:listbox id="contacts-listbox" xbl:inherits="disabled,rows">
        </xul:listbox>
      </xul:vbox>
    </content>

    <implementation>
      <property name="disabled" onget="return this.getAttribute('disabled') == 'true'"
        onset="this.setAttribute('disabled', !!val); return val;"/>

      <property name="choosenContacts">
        <getter><![CDATA[
          var count = this._listbox.getRowCount();
          var contacts = [];
          var contactsHash = {};
          for (var i = 0; i < count; i++) {
            var item = this._listbox.getItemAtIndex(i);
            if (item.checked && item.value && !contactsHash[item.value]) {
              contactsHash[item.value] = 1;
              contacts.push(item.value);
            }
          }
          return contacts;
        ]]></getter>

        <setter><![CDATA[
          var valHash = {};
          var count = this._listbox.getRowCount();

          for (var i = 0; i < val.length; i++)
            valHash[val[i].name || val[i]] = true;

          this._internal = true;
          for (i = 0; i < count; i++) {
            var item = this._listbox.getItemAtIndex(i);
            item.checked = false;
            if ("checkedCount" in item)
              item.checkedCount = 0;
            else
              item.lastChecked = false;
          }
          this._internal = false;

          for (i = 0; i < count; i++) {
            var item = this._listbox.getItemAtIndex(i);
            if (item.value && valHash[item.value]) {
              item.checked = !!valHash[item.value];
              delete valHash[item.value];
            }
          }

          for (i in valHash)
            this.addContact(i, false);

          return val;
        ]]></setter>
      </property>

      <constructor>
        <![CDATA[
          this._listbox = document.getAnonymousElementByAttribute(this, "id", "contacts-listbox");
          this._textbox = document.getAnonymousElementByAttribute(this, "id", "name-textbox");

          var account = window;
          while (account && !account.account)
            account = account.opener;
          if (account) {
            account = account.account;
            contactsHash = {};
            for (var group in account.groupsIterator()) {
              var groupItem = this._listbox.appendItem(group.visibleName, "");
              groupItem.setAttribute("type", "checkbox");
              groupItem.contacts = [];
              groupItem.checkedCount = 0;
              for (var contact in group.contactsIterator()) {
                var contactItem = this._listbox.appendItem("  "+contact.visibleName, contact.jid);
                contactItem.setAttribute("type", "checkbox");
                contactItem.group = groupItem;
                (contactItem.dups = contactsHash[contact.jid] = contactsHash[contact.jid] || []).
                  push(contactItem);
                groupItem.contacts.push(contactItem);
              }
            }
          }
        ]]>
      </constructor>

      <method name="addContact">
        <parameter name="jid"/>
        <parameter name="scroll"/>
        <body><![CDATA[
          if (!jid)
            return;

          var count = this._listbox.getRowCount(), item;
          for (var i = 0; i < count; i++) {
            item = this._listbox.getItemAtIndex(i);
            if (item.value == jid) {
              item.checked = true;
              if (scroll)
                this._listbox.ensureElementIsVisible(item);
              return;
            }
          }

          item = document.createElement("listitem");
          item.setAttribute("type", "checkbox");
          item.setAttribute("checked", "true");
          item.setAttribute("label", jid);
          item.setAttribute("value", jid);

          this._listbox.appendChild(item);
          if (scroll)
            this._listbox.ensureElementIsVisible(item);
        ]]></body>
      </method>
    </implementation>

    <handlers>
      <handler event="command"><![CDATA[
        if (event.originalTarget.id != "add-button")
          return;

        if (!this._textbox.value)
          return;
        if (!~this._textbox.value.search(/^[^@]+@(?:\w(?:[\w-]*\w)?\.)*[^\W\d](?:[\w-]*\w)?$/)) {
          alert("Please give correct Jabber ID");
          return;
        }

        this.addContact(this._textbox.value, true);
        this._textbox.value = "";
      ]]></handler>

      <handler event="CheckboxStateChange"><![CDATA[
        if (this._internal)
          return;

        var item = event.originalTarget;
        if (item.contacts) {
          for (var i = 0; i < item.contacts.length; i++)
            item.contacts[i].checked = item.checked;
        } else if (item.dups) {
          this._internal = true;

          for (var i = 0; i < item.dups.length; i++) {
            if (item.dups[i].lastChecked == item.checked)
              continue;

            item.dups[i].lastChecked = item.checked;

            if (item != item.dups[i])
              item.dups[i].checked = item.checked;
            if (item.checked) {
              if (++item.dups[i].group.checkedCount == item.dups[i].group.contacts.length)
                item.dups[i].group.checked = true;
            } else if (item.dups[i].group.checkedCount-- == item.dups[i].group.contacts.length)
                item.dups[i].group.checked = false;
          }

          this._internal = false;
        }
      ]]></handler>
    </handlers>

  </binding>

</bindings>
