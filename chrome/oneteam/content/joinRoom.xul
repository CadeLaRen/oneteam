<?xml version="1.0" encoding="ISO-8859-1"?>

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam/content/bindings/bindings.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam/skin/dialog.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam/skin/joinroom/joinroom.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam-branding/locale/branding.css" type="text/css"?>

<?xul-overlay href="chrome://oneteam/content/overlays/bookmarkForm.xul"?>
<?xul-overlay href="chrome://oneteam/content/overlays/macMenuOverlay.xul"?>

<!-- This window is opened by account.onJoinRoom(), in 2 cases:
     * on selecting 'Chat Rooms' > 'Join Chat Room' in the 'File' menu, without argument
     * or on being invited to a chat room, the argument is a conference representing the room.
     Some methods are shared with manageBookmarks.xul and bookmarkRoom.xul,
     in the overlay bookmarkForm.xul.                                                  -->

<dialog id="oneteam" windowtype="ot:joinRoom" title="_('Join Room')"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml"
  buttonlabelaccept="_('Join')" buttonlabelcancel="_('Cancel')"
  buttons="accept,cancel"
  onunload="cleanup()" ondialogaccept="return joinRoom()" onload="onLoad()">

  <script type="text/javascript;version=1.7" src="JavaScript/moduleloader.js"/>
  <script type="text/javascript;version=1.7"><![CDATA[
    ML.importMod("model/account.js");

    var conference = window.arguments && window.arguments[0];
    var conf;
    var input = {};

    function onLoad() {
      populateBookmarks();

      for each (var id in "room server nick pass bookmark name autoJoin".split(" "))
        input[id] = document.getElementById(id);

      if (conference instanceof Conference) {
        input.room.value   = conference.jid.node;
        input.server.value = conference.jid.domain;
        input.nick.value   = conference.bookmarkNick
                             || prefManager.getPref('chat.muc.nickname')
                             || account.myJID.node;
        input.pass.value   = conference.bookmarkPassword || "";
        input.name.value   = conference.bookmarkName || "";
        input.autoJoin.checked = !!conference.autoJoin;

        input.room.disabled = input.room.previousSibling.disabled =
            input.server.disabled = input.server.previousSibling.disabled = true;

        autocomplete();
      } else {
        input.server.value = conference || account.defaultConferenceServer || "";
        input.nick.value = prefManager.getPref('chat.muc.nickname') || account.myJID.node;
        conference = null;
      }
    }

    function lookupRooms() {
      account.showConferencesBrowser(input.server.value, fillFromBrowser);
    }

    function fillFromBrowser(jid, bookmark) {
      input.room.value = jid.node;
      input.server.value = jid.domain;
      input.bookmark.checked = !!bookmark;
      updateBookmarkUIState();
    }

    function joinRoom() {
      conf = conference
             || account.getOrCreateConference(new JID(input.room.value, input.server.value));

      if (input.bookmark.checked)
        conf.bookmark(input.name.value, input.autoJoin.checked,
                      input.nick.value, input.pass.value);

      document.getElementById("oneteam").style.cursor = "wait";
      conf.joinRoom(joinRoomResponse, input.nick.value, input.pass.value);

      return false;
    }

    function cleanup() {
      if (conf)
        conf.exitRoom();
    }

    function joinRoomResponse(pkt, errorTag, errorMsg) {
      document.getElementById("oneteam").style.cursor = "";

      if (pkt.getType() == "error") {
        alert(errorMsg);
        return;
      }
      conf = null;
      window.close();
    }

    function updateBookmarkUIState() {
      input.autoJoin.disabled = input.name.disabled = !input.bookmark.checked
    }

    var backup = null;
    function autocomplete() {
      if (bookmarksByJid[input.room.value+'@'+input.server.value]) {
        if (!backup) {
          backup = {
            nick: input.nick.value,
            pass: input.pass.value,
            name: input.name.value,
            bookmark: input.bookmark.checked,
            autoJoin: input.autoJoin.checked
          };
        }
        var bookmark = bookmarksByJid[input.room.value+'@'+input.server.value];
        input.nick.value = bookmark.nick;
        input.pass.value = bookmark.pass;
        input.name.value = bookmark.name;
        input.autoJoin.checked = bookmark.autoJoin;
        input.bookmark.checked = true;
        input.bookmark.disabled = input.name.disabled = true;
        input.autoJoin.disabled = false;
      } else if (backup) {
        input.nick.value = backup.nick;
        input.pass.value = backup.pass;
        input.name.value = backup.name;
        input.bookmark.checked = backup.bookmark;
        input.autoJoin.checked = backup.autoJoin;
        input.bookmark.disabled = false;
        input.autoJoin.disabled = input.name.disabled = !input.autoJoin.checked;
        backup = null;
      }
    }
  ]]></script>

  <group id="macMenu"/>

  <toolbox id="mainToolbox">
    <menubar id="macMenuBar"/>
  </toolbox>

  <grid>
    <columns>
      <column/>
      <column flex="1"/>
    </columns>
    <rows>
      <row align="center">
        <label value="_('Room:')" control="room"/>
        <textbox id="room" oninput="autocomplete()"
                 type="verifiable" regex="^[^ \t\n&quot;&amp;&apos;/:&lt;&gt;@]+$"/>
      </row>

      <row align="center">
        <label value="_('Server:')" control="server"/>
        <hbox>
          <textbox id="server" oninput="autocomplete()" flex="1"
                   type="verifiable" regex="^(?:\w(?:[\w-]*\w)?\.)*[^\W\d](?:[\w-]*\w)?$"/>
          <button class="search-action" oncommand="lookupRooms()"/>
        </hbox>
      </row>

      <row align="center">
        <label value="_('Nick:')" control="nick"/>
        <textbox type="verifiable" id="nick" regex="."/>
      </row>

      <row align="center">
        <label value="_('Password:')" control="pass"/>
        <textbox id="pass" type="password"/>
      </row>

    </rows>
  </grid>

  <spacer/>

  <separator class="groove"/>

  <spacer/>

  <hbox>
    <checkbox label="_('Bookmark this room as')" id="bookmark"
            oncommand="updateBookmarkUIState()"/>
    <textbox type="verifiable" condition="checkName()" flex="1" id="name" disabled="true"/>
  </hbox>
  <checkbox style="margin-left: 2em" label="_('Always join this room at startup')" id="autoJoin" disabled="true"/>

  <spacer/>
</dialog>
