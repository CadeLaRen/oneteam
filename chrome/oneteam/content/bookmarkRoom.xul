<?xml version="1.0" encoding="ISO-8859-1"?>

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam/content/bindings/bindings.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam/skin/dialog.css" type="text/css"?>
<?xml-stylesheet href="chrome://oneteam-branding/locale/branding.css" type="text/css"?>

<?xul-overlay href="chrome://oneteam/content/overlays/macMenuOverlay.xul"?>

<dialog id="oneteam" windowtype="ot:bookmarkRoom" title="_('Bookmark Room')"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml"
  width="300" height="400"
  buttonlabelaccept="_('Bookmark')" buttonlabelcancel="_('Cancel')"
  buttons="accept,cancel"
  ondialogaccept="return bookmarkRoom()" onload="onLoad()">

  <script type="text/javascript;version=1.7" src="JavaScript/moduleloader.js"/>
  <script type="text/javascript;version=1.7"><![CDATA[
    ML.importMod("model/account.js");

    var conference = window.arguments && window.arguments[0];
    var conf;

    var room, server, nick, password, bookmarkName;

    function onLoad() {
      for each (i in "room server nick password bookmarkName".split(" "))
        eval(i+" = document.getElementById("+uneval(i)+")");

      if (conference) {
        room.value = conference.jid.node;
        server.value = conference.jid.domain;
        nick.value = conference.bookmarkNick || "";
        password.value = conference.bookmarkPassword || "";

        bookmarkName.value = conference.bookmarkName || "";
        room.disabled = room.previousSibling.disabled =
        server.disabled = server.previousSibling.disabled = true;
      } else {
        server.value = account.defaultConferenceServer || "";
      }

      document.getElementById('nick').value =
        prefManager.getPref('chat.muc.nickname');
    }

    function bookmarkRoom() {
      conf = conference;

      if (!conference)
        conf = account.getOrCreateConference(room.value+"@"+server.value);

      conf.bookmark(bookmarkName.value || conf.jid.node, false, nick.value, password.value);

      return true;
    }
  ]]></script>

  <group id="macMenu"/>

  <toolbox id="mainToolbox">
    <menubar id="macMenuBar"/>
  </toolbox>

  <dialogheader title="_('Bookmark Room')"/>

  <grid>
    <columns>
      <column/>
      <column flex="1"/>
    </columns>
    <rows>
      <row align="center">
        <label value="_('Room:')" control="room"/>
        <textbox id="room" type="verifiable" regex="^[^ \t\n&quot;&amp;&apos;/:&lt;&gt;@]+$"
                 errortext="_('Room name can\'t be empty and can\'t contain any of
                            [&quot;&amp;\&apos;/:&lt;&gt;@] or blank characters')"/>
      </row>

      <row align="center">
        <label value="_('Server:')" control="server"/>
        <textbox id="server" type="verifiable" regex="^(?:\w(?:[\w-]*\w)?\.)*[^\W\d](?:[\w-]*\w)?$"/>
      </row>

      <row align="center">
        <label value="_('Nickname:')" control="nick"/>
        <textbox id="nick" type="verifiable" regex="."
                 errortext="_('Nickname can\'t be empty')"/>
      </row>

      <row align="center">
        <label value="_('Password:')" control="password"/>
        <textbox id="password" type="password"/>
      </row>

      <spacer/>

      <row align="center">
        <label value="_('Name:')" control="bookmarkName"/>
        <textbox id="bookmarkName" type="verifiable" condition="
          this.value == '' ?
            (this.errortext=_('Bookmark name can\'t be empty'), false) :
          !conference &amp;&amp; account.bookmarks.getBookmarkByName(this.value) ?
            (this.errortext=_('Bookmark with that name already exists'), false) : true"/>
      </row>
    </rows>
  </grid>
  <spacer/>
</dialog>
